task upload {
    String license_key, version_id , version_code;
    File mapping_file;
    String urlStr = "http://dev.zhujianfeng.info:15000/upload_mapping";
    String VERSIONID = "version_id";
    String VERSIONCODE = "version_code";
    String LICENSE_KEY = "license_key";
    String MAPPING_FILE = "mapping_file";
    Map<String, String> textMap;
    Properties properties = new Properties();
    try {
        properties.load(new FileInputStream("mmtrix.properties"));
        license_key = properties.getProperty("com.mmtrix.application_token");
//        version_id = VERSION_ID;
//        version_code = VERSION_CODE;
        version_id = 23;
        version_code = 23;
        mapping_file = new File(projectDir.getAbsolutePath() + "/build/outputs/mapping/release/mapping.txt");
        textMap = new HashMap<String, String>();
        textMap.put(VERSIONID, version_id);
        textMap.put(VERSIONCODE, version_code);
        textMap.put(LICENSE_KEY, license_key);
    } catch (FileNotFoundException e) {
        return;
    }
    println "license_key: " + license_key + " version_id: " + version_id+" version_code: "+version_code;
    String res = "";
    HttpURLConnection conn = null;
    String BOUNDARY = "---------------------------";
    try {
        URL url = new URL(urlStr);
        conn = (HttpURLConnection) url.openConnection();
        conn.setConnectTimeout(10000);
        conn.setReadTimeout(30000);
        conn.setDoOutput(true);
        conn.setDoInput(true);
        conn.setUseCaches(false);
        conn.setRequestMethod("POST");
        conn.setRequestProperty("Connection", "Keep-Alive");
        conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows; U; Windows NT 6.1; zh-CN; rv:1.9.2.6)");
        conn.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + BOUNDARY);
        OutputStream out = new DataOutputStream(conn.getOutputStream());
        if (textMap != null) {
            StringBuffer strBuf = new StringBuffer();
            Iterator<Map.Entry<String, String>> iter = textMap.entrySet().iterator();
            while (iter.hasNext()) {
                Map.Entry<String, String> entry = iter.next();
                String inputName = (String) entry.getKey();
                String inputValue = (String) entry.getValue();
                if (inputValue == null) {
                    continue;
                }
                strBuf.append("\r\n").append("--").append(BOUNDARY).append("\r\n");
                strBuf.append("Content-Disposition: form-data; name=\"" + inputName + "\"\r\n\r\n");
                strBuf.append(inputValue);
            }
            out.write(strBuf.toString().getBytes());
        }

        String filename = mapping_file.getName();
        String contentType = "file";

        StringBuffer strBuf = new StringBuffer();
        strBuf.append("\r\n").append("--").append(BOUNDARY).append("\r\n");
        strBuf.append("Content-Disposition: form-data; name=\"" + MAPPING_FILE + "\"; filename=\"" + filename + "\"\r\n");
        strBuf.append("Content-Type:" + contentType + "\r\n\r\n");

        out.write(strBuf.toString().getBytes());
        DataInputStream dataInputStream = new DataInputStream(new FileInputStream(mapping_file));
        int bytes = 0;
        byte[] bufferOut = new byte[1024];
        while ((bytes = dataInputStream.read(bufferOut)) != -1) {
            out.write(bufferOut, 0, bytes);
        }
        dataInputStream.close();

        byte[] endData = ("\r\n--" + BOUNDARY + "--\r\n").getBytes();
        out.write(endData);
        out.flush();
        out.close();

        StringBuffer stringBufferuf = new StringBuffer();
        BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String line = null;
        while ((line = reader.readLine()) != null) {
            stringBufferuf.append(line).append("\n");
        }
        res = stringBufferuf.toString();
        println res;
        reader.close();
        reader = null;
    } catch (Exception e) {
        println "发送POST请求出错----" + urlStr;
        e.printStackTrace();
    } finally {
        if (conn != null) {
            conn.disconnect();
            conn = null;
        }
    }
    println mapping_file.length()

}